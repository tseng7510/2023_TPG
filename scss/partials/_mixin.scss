//-------------------------------------------------------------mixin-media-------//
@mixin transition($elem: all, $i: 0.3, $type: ease) {
  -webkit-transition: $elem #{$i}s $type;
  -moz-transition: $elem #{$i}s $type;
  -ms-transition: $elem #{$i}s $type;
  -o-transition: $elem #{$i}s $type;
  transition: $elem #{$i}s $type;
}

$screen-lg: 1400px !default; //電腦
$screen-md: 1001px !default; //平板
$screen-sm: 768px !default; //手機
$screen-xs: 576px !default; //極小尺寸

$screen-xs-min: $screen-xs !default;
$screen-phone: $screen-xs-min !default;
$screen-sm-min: $screen-sm !default;
$screen-tablet: $screen-sm-min !default;
$screen-md-min: $screen-md !default;
$screen-desktop: $screen-md-min !default;
$screen-lg-min: $screen-lg !default;
$screen-xs-mobile-max: ($screen-xs - 1) !default;
$screen-xs-max: ($screen-sm-min - 1) !default;
$screen-sm-max: ($screen-md-min - 1) !default;
$screen-md-max: ($screen-lg-min - 1) !default;

@mixin screen($size) {
  $desktop: '(max-width: #{$screen-lg})'; // max-width <= 1400px
  $notebookMin: '(min-width: #{$screen-lg})'; // min-width >= 1400px
  $notebook: '(max-width: #{$screen-md-max})'; // max-width <= 1399px
  $tabletMin: '(min-width: #{$screen-sm-max})'; // min-width >= 1001px
  $tablet: '(max-width: #{$screen-sm-max})'; // max-width <= 1001px
  $tabletMin: '(min-width: #{$screen-sm-max})'; // min-width >= 1001px
  $mobile: '(max-width: #{$screen-xs-max})'; // max-width <= 767px
  $mobileMin: '(min-width: #{$screen-xs-max})'; // min-width >= 767px
  $xs_mobile: '(max-width: #{$screen-xs-mobile-max})'; // max-width <= 575px
  $xs_mobileMin: '(min-width: #{$screen-xs-mobile-max})'; // min-width >= 575px
  @if $size==desktop {
    @media screen and #{$desktop} {
      @content;
    }
  } @else if $size==notebookMin {
    @media screen and #{$notebookMin} {
      @content;
    }
  } @else if $size==notebook {
    @media screen and #{$notebook} {
      @content;
    }
  } @else if $size==notebookMin {
    @media screen and #{$notebookMin} {
      @content;
    }
  } @else if $size==tablet {
    @media screen and #{$tablet} {
      @content;
    }
  } @else if $size==tabletMin {
    @media screen and #{$tabletMin} {
      @content;
    }
  } @else if $size==mobile {
    @media screen and #{$mobile} {
      @content;
    }
  } @else if $size==mobileMin {
    @media screen and #{$mobileMin} {
      @content;
    }
  } @else if $size==xs_mobile {
    @media screen and #{$xs-mobile} {
      @content;
    }
  } @else if $size==xs_mobileMin {
    @media screen and #{$xs-mobileMin} {
      @content;
    }
  } @else {
    @media screen and #{$size} {
      @content;
    }
  }
}

@mixin screenWidth($sizeWidth) {
  $sizeWidthUse: '(max-width: #{$sizeWidth}px)';
  @media screen and #{$sizeWidthUse} {
    @content;
  }
}
@mixin screenWidthMin($sizeWidth) {
  $sizeWidthUse: '(min-width: #{$sizeWidth}px)';
  @media screen and #{$sizeWidthUse} {
    @content;
  }
}

// css arrow
@mixin cssArrow($arrowColor) {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 4px 0 4px;
  border-color: $arrowColor transparent transparent transparent;
}

//px轉rem 使用方式 rem(px) px直接輸入數字即可
@function rem($n: $mainFontSize) {
  @return calc($n / $mainFontSize * 1rem);
}

// more

//font-size
//color
//background
//border
//滑過背景
//滑過color
//滑過border
@mixin moreComponents($moreFontSize, $moreFontColor, $moreBgColor, $moreBorder, $moreHoverBgColor, $moreHoverFontColor, $moreHoverBorder: $mainColor 1px solid) {
  color: $moreFontColor;
  font-weight: 300;
  font-size: rem($moreFontSize);
  padding: 7px 10px 5px;
  z-index: 0;
  text-align: center;
  display: block;
  position: relative;
  background: $moreBgColor;
  border: $moreBorder;
  cursor: pointer;
  &::before {
    content: '';
    position: absolute;
    z-index: -1;
    width: 0;
    right: 0;
    bottom: 0;
    top: 0;
    display: block;
    background: $moreHoverBgColor;
    @include transition(all, 0.3);
  }
  &:hover {
    color: $moreHoverFontColor;
    border: $moreHoverBorder;
    &::before {
      width: 100%;
      left: 0;
    }
  }
}

@mixin innerPage {
  position: relative;
  // z-index: 0;
  // &::before {
  //   content: '';
  //   inset: 0 0 30% 0;
  //   display: block;
  //   position: absolute;
  //   z-index: -1;
  //   background: #f3f2f3;
  //   background: linear-gradient(to bottom, #f3f2f3 0%, #ffffff 100%);
  // }
}
